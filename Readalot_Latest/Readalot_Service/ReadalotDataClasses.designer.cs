#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Readalot_Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="demoReadalot")]
	public partial class ReadalotDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoice_Item(Invoice_Item instance);
    partial void UpdateInvoice_Item(Invoice_Item instance);
    partial void DeleteInvoice_Item(Invoice_Item instance);
    partial void InsertShipping_Address(Shipping_Address instance);
    partial void UpdateShipping_Address(Shipping_Address instance);
    partial void DeleteShipping_Address(Shipping_Address instance);
    partial void InsertTextBook(TextBook instance);
    partial void UpdateTextBook(TextBook instance);
    partial void DeleteTextBook(TextBook instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public ReadalotDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["demoReadalotConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ReadalotDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReadalotDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReadalotDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReadalotDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Invoice_Item> Invoice_Items
		{
			get
			{
				return this.GetTable<Invoice_Item>();
			}
		}
		
		public System.Data.Linq.Table<Shipping_Address> Shipping_Addresses
		{
			get
			{
				return this.GetTable<Shipping_Address>();
			}
		}
		
		public System.Data.Linq.Table<TextBook> TextBooks
		{
			get
			{
				return this.GetTable<TextBook>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invoice_ID;
		
		private int _User_ID;
		
		private System.DateTime _Invoice_Date;
		
		private EntitySet<Invoice_Item> _Invoice_Items;
		
		private EntitySet<Shipping_Address> _Shipping_Addresses;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoice_IDChanging(int value);
    partial void OnInvoice_IDChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnInvoice_DateChanging(System.DateTime value);
    partial void OnInvoice_DateChanged();
    #endregion
		
		public Invoice()
		{
			this._Invoice_Items = new EntitySet<Invoice_Item>(new Action<Invoice_Item>(this.attach_Invoice_Items), new Action<Invoice_Item>(this.detach_Invoice_Items));
			this._Shipping_Addresses = new EntitySet<Shipping_Address>(new Action<Shipping_Address>(this.attach_Shipping_Addresses), new Action<Shipping_Address>(this.detach_Shipping_Addresses));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Invoice_ID
		{
			get
			{
				return this._Invoice_ID;
			}
			set
			{
				if ((this._Invoice_ID != value))
				{
					this.OnInvoice_IDChanging(value);
					this.SendPropertyChanging();
					this._Invoice_ID = value;
					this.SendPropertyChanged("Invoice_ID");
					this.OnInvoice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Invoice_Date
		{
			get
			{
				return this._Invoice_Date;
			}
			set
			{
				if ((this._Invoice_Date != value))
				{
					this.OnInvoice_DateChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Date = value;
					this.SendPropertyChanged("Invoice_Date");
					this.OnInvoice_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice_Item", Storage="_Invoice_Items", ThisKey="Invoice_ID", OtherKey="Invoice_ID")]
		public EntitySet<Invoice_Item> Invoice_Items
		{
			get
			{
				return this._Invoice_Items;
			}
			set
			{
				this._Invoice_Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Shipping_Address", Storage="_Shipping_Addresses", ThisKey="Invoice_ID", OtherKey="Invoice_ID")]
		public EntitySet<Shipping_Address> Shipping_Addresses
		{
			get
			{
				return this._Shipping_Addresses;
			}
			set
			{
				this._Shipping_Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice_Items(Invoice_Item entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Invoice_Items(Invoice_Item entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_Shipping_Addresses(Shipping_Address entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Shipping_Addresses(Shipping_Address entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice_Item")]
	public partial class Invoice_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_ID;
		
		private int _Invoice_ID;
		
		private string _Book_ISBN;
		
		private int _Quantity;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<TextBook> _TextBook;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnInvoice_IDChanging(int value);
    partial void OnInvoice_IDChanged();
    partial void OnBook_ISBNChanging(string value);
    partial void OnBook_ISBNChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public Invoice_Item()
		{
			this._Invoice = default(EntityRef<Invoice>);
			this._TextBook = default(EntityRef<TextBook>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_ID", DbType="Int NOT NULL")]
		public int Invoice_ID
		{
			get
			{
				return this._Invoice_ID;
			}
			set
			{
				if ((this._Invoice_ID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoice_IDChanging(value);
					this.SendPropertyChanging();
					this._Invoice_ID = value;
					this.SendPropertyChanged("Invoice_ID");
					this.OnInvoice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ISBN", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Book_ISBN
		{
			get
			{
				return this._Book_ISBN;
			}
			set
			{
				if ((this._Book_ISBN != value))
				{
					if (this._TextBook.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBook_ISBNChanging(value);
					this.SendPropertyChanging();
					this._Book_ISBN = value;
					this.SendPropertyChanged("Book_ISBN");
					this.OnBook_ISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice_Item", Storage="_Invoice", ThisKey="Invoice_ID", OtherKey="Invoice_ID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Invoice_Items.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Invoice_Items.Add(this);
						this._Invoice_ID = value.Invoice_ID;
					}
					else
					{
						this._Invoice_ID = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TextBook_Invoice_Item", Storage="_TextBook", ThisKey="Book_ISBN", OtherKey="Book_ISBN", IsForeignKey=true)]
		public TextBook TextBook
		{
			get
			{
				return this._TextBook.Entity;
			}
			set
			{
				TextBook previousValue = this._TextBook.Entity;
				if (((previousValue != value) 
							|| (this._TextBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TextBook.Entity = null;
						previousValue.Invoice_Items.Remove(this);
					}
					this._TextBook.Entity = value;
					if ((value != null))
					{
						value.Invoice_Items.Add(this);
						this._Book_ISBN = value.Book_ISBN;
					}
					else
					{
						this._Book_ISBN = default(string);
					}
					this.SendPropertyChanged("TextBook");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shipping_Address")]
	public partial class Shipping_Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Shipping_ID;
		
		private int _Invoice_ID;
		
		private string _Street;
		
		private string _City;
		
		private string _Province;
		
		private string _Zip_Code;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShipping_IDChanging(int value);
    partial void OnShipping_IDChanged();
    partial void OnInvoice_IDChanging(int value);
    partial void OnInvoice_IDChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnZip_CodeChanging(string value);
    partial void OnZip_CodeChanged();
    #endregion
		
		public Shipping_Address()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipping_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Shipping_ID
		{
			get
			{
				return this._Shipping_ID;
			}
			set
			{
				if ((this._Shipping_ID != value))
				{
					this.OnShipping_IDChanging(value);
					this.SendPropertyChanging();
					this._Shipping_ID = value;
					this.SendPropertyChanged("Shipping_ID");
					this.OnShipping_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_ID", DbType="Int NOT NULL")]
		public int Invoice_ID
		{
			get
			{
				return this._Invoice_ID;
			}
			set
			{
				if ((this._Invoice_ID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoice_IDChanging(value);
					this.SendPropertyChanging();
					this._Invoice_ID = value;
					this.SendPropertyChanged("Invoice_ID");
					this.OnInvoice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Zip_Code
		{
			get
			{
				return this._Zip_Code;
			}
			set
			{
				if ((this._Zip_Code != value))
				{
					this.OnZip_CodeChanging(value);
					this.SendPropertyChanging();
					this._Zip_Code = value;
					this.SendPropertyChanged("Zip_Code");
					this.OnZip_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Shipping_Address", Storage="_Invoice", ThisKey="Invoice_ID", OtherKey="Invoice_ID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Shipping_Addresses.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Shipping_Addresses.Add(this);
						this._Invoice_ID = value.Invoice_ID;
					}
					else
					{
						this._Invoice_ID = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TextBook")]
	public partial class TextBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Book_ISBN;
		
		private string _Book_Author;
		
		private string _Book_Name;
		
		private string _Book_Description;
		
		private string _Book_Category;
		
		private decimal _Book_Price;
		
		private int _Book_Quantity;
		
		private string _Book_ImageSource;
		
		private EntitySet<Invoice_Item> _Invoice_Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBook_ISBNChanging(string value);
    partial void OnBook_ISBNChanged();
    partial void OnBook_AuthorChanging(string value);
    partial void OnBook_AuthorChanged();
    partial void OnBook_NameChanging(string value);
    partial void OnBook_NameChanged();
    partial void OnBook_DescriptionChanging(string value);
    partial void OnBook_DescriptionChanged();
    partial void OnBook_CategoryChanging(string value);
    partial void OnBook_CategoryChanged();
    partial void OnBook_PriceChanging(decimal value);
    partial void OnBook_PriceChanged();
    partial void OnBook_QuantityChanging(int value);
    partial void OnBook_QuantityChanged();
    partial void OnBook_ImageSourceChanging(string value);
    partial void OnBook_ImageSourceChanged();
    #endregion
		
		public TextBook()
		{
			this._Invoice_Items = new EntitySet<Invoice_Item>(new Action<Invoice_Item>(this.attach_Invoice_Items), new Action<Invoice_Item>(this.detach_Invoice_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ISBN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Book_ISBN
		{
			get
			{
				return this._Book_ISBN;
			}
			set
			{
				if ((this._Book_ISBN != value))
				{
					this.OnBook_ISBNChanging(value);
					this.SendPropertyChanging();
					this._Book_ISBN = value;
					this.SendPropertyChanged("Book_ISBN");
					this.OnBook_ISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Author", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_Author
		{
			get
			{
				return this._Book_Author;
			}
			set
			{
				if ((this._Book_Author != value))
				{
					this.OnBook_AuthorChanging(value);
					this.SendPropertyChanging();
					this._Book_Author = value;
					this.SendPropertyChanged("Book_Author");
					this.OnBook_AuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Book_Name
		{
			get
			{
				return this._Book_Name;
			}
			set
			{
				if ((this._Book_Name != value))
				{
					this.OnBook_NameChanging(value);
					this.SendPropertyChanging();
					this._Book_Name = value;
					this.SendPropertyChanged("Book_Name");
					this.OnBook_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Book_Description
		{
			get
			{
				return this._Book_Description;
			}
			set
			{
				if ((this._Book_Description != value))
				{
					this.OnBook_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Book_Description = value;
					this.SendPropertyChanged("Book_Description");
					this.OnBook_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Category", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Book_Category
		{
			get
			{
				return this._Book_Category;
			}
			set
			{
				if ((this._Book_Category != value))
				{
					this.OnBook_CategoryChanging(value);
					this.SendPropertyChanging();
					this._Book_Category = value;
					this.SendPropertyChanged("Book_Category");
					this.OnBook_CategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Price", DbType="Money NOT NULL")]
		public decimal Book_Price
		{
			get
			{
				return this._Book_Price;
			}
			set
			{
				if ((this._Book_Price != value))
				{
					this.OnBook_PriceChanging(value);
					this.SendPropertyChanging();
					this._Book_Price = value;
					this.SendPropertyChanged("Book_Price");
					this.OnBook_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_Quantity", DbType="Int NOT NULL")]
		public int Book_Quantity
		{
			get
			{
				return this._Book_Quantity;
			}
			set
			{
				if ((this._Book_Quantity != value))
				{
					this.OnBook_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Book_Quantity = value;
					this.SendPropertyChanged("Book_Quantity");
					this.OnBook_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book_ImageSource", DbType="VarChar(MAX)")]
		public string Book_ImageSource
		{
			get
			{
				return this._Book_ImageSource;
			}
			set
			{
				if ((this._Book_ImageSource != value))
				{
					this.OnBook_ImageSourceChanging(value);
					this.SendPropertyChanging();
					this._Book_ImageSource = value;
					this.SendPropertyChanged("Book_ImageSource");
					this.OnBook_ImageSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TextBook_Invoice_Item", Storage="_Invoice_Items", ThisKey="Book_ISBN", OtherKey="Book_ISBN")]
		public EntitySet<Invoice_Item> Invoice_Items
		{
			get
			{
				return this._Invoice_Items;
			}
			set
			{
				this._Invoice_Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice_Items(Invoice_Item entity)
		{
			this.SendPropertyChanging();
			entity.TextBook = this;
		}
		
		private void detach_Invoice_Items(Invoice_Item entity)
		{
			this.SendPropertyChanging();
			entity.TextBook = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private string _Title;
		
		private string _F_Name;
		
		private string _L_Name;
		
		private string _E_Mail;
		
		private string _Password;
		
		private string _UserType;
		
		private EntitySet<Invoice> _Invoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnF_NameChanging(string value);
    partial void OnF_NameChanged();
    partial void OnL_NameChanging(string value);
    partial void OnL_NameChanged();
    partial void OnE_MailChanging(string value);
    partial void OnE_MailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    #endregion
		
		public User()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string F_Name
		{
			get
			{
				return this._F_Name;
			}
			set
			{
				if ((this._F_Name != value))
				{
					this.OnF_NameChanging(value);
					this.SendPropertyChanging();
					this._F_Name = value;
					this.SendPropertyChanged("F_Name");
					this.OnF_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L_Name
		{
			get
			{
				return this._L_Name;
			}
			set
			{
				if ((this._L_Name != value))
				{
					this.OnL_NameChanging(value);
					this.SendPropertyChanging();
					this._L_Name = value;
					this.SendPropertyChanged("L_Name");
					this.OnL_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Mail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string E_Mail
		{
			get
			{
				return this._E_Mail;
			}
			set
			{
				if ((this._E_Mail != value))
				{
					this.OnE_MailChanging(value);
					this.SendPropertyChanging();
					this._E_Mail = value;
					this.SendPropertyChanged("E_Mail");
					this.OnE_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_Invoices", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591

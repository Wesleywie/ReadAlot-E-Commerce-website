//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Readalot_Latest.ReadalotServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Readalot_Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string E_MailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string F_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.Invoice[] InvoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string L_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.Temp_Shopping_Cart Temp_Shopping_CartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string E_Mail {
            get {
                return this.E_MailField;
            }
            set {
                if ((object.ReferenceEquals(this.E_MailField, value) != true)) {
                    this.E_MailField = value;
                    this.RaisePropertyChanged("E_Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string F_Name {
            get {
                return this.F_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.F_NameField, value) != true)) {
                    this.F_NameField = value;
                    this.RaisePropertyChanged("F_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.Invoice[] Invoices {
            get {
                return this.InvoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicesField, value) != true)) {
                    this.InvoicesField = value;
                    this.RaisePropertyChanged("Invoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string L_Name {
            get {
                return this.L_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.L_NameField, value) != true)) {
                    this.L_NameField = value;
                    this.RaisePropertyChanged("L_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.Temp_Shopping_Cart Temp_Shopping_Cart {
            get {
                return this.Temp_Shopping_CartField;
            }
            set {
                if ((object.ReferenceEquals(this.Temp_Shopping_CartField, value) != true)) {
                    this.Temp_Shopping_CartField = value;
                    this.RaisePropertyChanged("Temp_Shopping_Cart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Temp_Shopping_Cart", Namespace="http://schemas.datacontract.org/2004/07/Readalot_Service")]
    [System.SerializableAttribute()]
    public partial class Temp_Shopping_Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Book_ISBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Item_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Total_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Book_ISBN {
            get {
                return this.Book_ISBNField;
            }
            set {
                if ((object.ReferenceEquals(this.Book_ISBNField, value) != true)) {
                    this.Book_ISBNField = value;
                    this.RaisePropertyChanged("Book_ISBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Item_Price {
            get {
                return this.Item_PriceField;
            }
            set {
                if ((this.Item_PriceField.Equals(value) != true)) {
                    this.Item_PriceField = value;
                    this.RaisePropertyChanged("Item_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total_Price {
            get {
                return this.Total_PriceField;
            }
            set {
                if ((this.Total_PriceField.Equals(value) != true)) {
                    this.Total_PriceField = value;
                    this.RaisePropertyChanged("Total_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/Readalot_Service")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Invoice_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Invoice_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.Invoice_Item[] Invoice_ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.Shipping_Address Shipping_AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Invoice_Date {
            get {
                return this.Invoice_DateField;
            }
            set {
                if ((this.Invoice_DateField.Equals(value) != true)) {
                    this.Invoice_DateField = value;
                    this.RaisePropertyChanged("Invoice_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Invoice_ID {
            get {
                return this.Invoice_IDField;
            }
            set {
                if ((this.Invoice_IDField.Equals(value) != true)) {
                    this.Invoice_IDField = value;
                    this.RaisePropertyChanged("Invoice_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.Invoice_Item[] Invoice_Items {
            get {
                return this.Invoice_ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.Invoice_ItemsField, value) != true)) {
                    this.Invoice_ItemsField = value;
                    this.RaisePropertyChanged("Invoice_Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.Shipping_Address Shipping_Address {
            get {
                return this.Shipping_AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.Shipping_AddressField, value) != true)) {
                    this.Shipping_AddressField = value;
                    this.RaisePropertyChanged("Shipping_Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shipping_Address", Namespace="http://schemas.datacontract.org/2004/07/Readalot_Service")]
    [System.SerializableAttribute()]
    public partial class Shipping_Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.Invoice InvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Invoice_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Zip_CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.Invoice Invoice {
            get {
                return this.InvoiceField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceField, value) != true)) {
                    this.InvoiceField = value;
                    this.RaisePropertyChanged("Invoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Invoice_ID {
            get {
                return this.Invoice_IDField;
            }
            set {
                if ((this.Invoice_IDField.Equals(value) != true)) {
                    this.Invoice_IDField = value;
                    this.RaisePropertyChanged("Invoice_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip_Code {
            get {
                return this.Zip_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Zip_CodeField, value) != true)) {
                    this.Zip_CodeField = value;
                    this.RaisePropertyChanged("Zip_Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice_Item", Namespace="http://schemas.datacontract.org/2004/07/Readalot_Service")]
    [System.SerializableAttribute()]
    public partial class Invoice_Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Book_ISBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.Invoice InvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Invoice_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Line_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.TextBook TextBookField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Book_ISBN {
            get {
                return this.Book_ISBNField;
            }
            set {
                if ((object.ReferenceEquals(this.Book_ISBNField, value) != true)) {
                    this.Book_ISBNField = value;
                    this.RaisePropertyChanged("Book_ISBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.Invoice Invoice {
            get {
                return this.InvoiceField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceField, value) != true)) {
                    this.InvoiceField = value;
                    this.RaisePropertyChanged("Invoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Invoice_ID {
            get {
                return this.Invoice_IDField;
            }
            set {
                if ((this.Invoice_IDField.Equals(value) != true)) {
                    this.Invoice_IDField = value;
                    this.RaisePropertyChanged("Invoice_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Line_ID {
            get {
                return this.Line_IDField;
            }
            set {
                if ((this.Line_IDField.Equals(value) != true)) {
                    this.Line_IDField = value;
                    this.RaisePropertyChanged("Line_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.TextBook TextBook {
            get {
                return this.TextBookField;
            }
            set {
                if ((object.ReferenceEquals(this.TextBookField, value) != true)) {
                    this.TextBookField = value;
                    this.RaisePropertyChanged("TextBook");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextBook", Namespace="http://schemas.datacontract.org/2004/07/Readalot_Service")]
    [System.SerializableAttribute()]
    public partial class TextBook : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Book_AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Book_CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Book_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Book_ISBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Book_ImageSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Book_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Book_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Book_QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Readalot_Latest.ReadalotServiceReference.Invoice_Item[] Invoice_ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Book_Author {
            get {
                return this.Book_AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.Book_AuthorField, value) != true)) {
                    this.Book_AuthorField = value;
                    this.RaisePropertyChanged("Book_Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Book_Category {
            get {
                return this.Book_CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.Book_CategoryField, value) != true)) {
                    this.Book_CategoryField = value;
                    this.RaisePropertyChanged("Book_Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Book_Description {
            get {
                return this.Book_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Book_DescriptionField, value) != true)) {
                    this.Book_DescriptionField = value;
                    this.RaisePropertyChanged("Book_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Book_ISBN {
            get {
                return this.Book_ISBNField;
            }
            set {
                if ((object.ReferenceEquals(this.Book_ISBNField, value) != true)) {
                    this.Book_ISBNField = value;
                    this.RaisePropertyChanged("Book_ISBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Book_ImageSource {
            get {
                return this.Book_ImageSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.Book_ImageSourceField, value) != true)) {
                    this.Book_ImageSourceField = value;
                    this.RaisePropertyChanged("Book_ImageSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Book_Name {
            get {
                return this.Book_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Book_NameField, value) != true)) {
                    this.Book_NameField = value;
                    this.RaisePropertyChanged("Book_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Book_Price {
            get {
                return this.Book_PriceField;
            }
            set {
                if ((this.Book_PriceField.Equals(value) != true)) {
                    this.Book_PriceField = value;
                    this.RaisePropertyChanged("Book_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Book_Quantity {
            get {
                return this.Book_QuantityField;
            }
            set {
                if ((this.Book_QuantityField.Equals(value) != true)) {
                    this.Book_QuantityField = value;
                    this.RaisePropertyChanged("Book_Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Readalot_Latest.ReadalotServiceReference.Invoice_Item[] Invoice_Items {
            get {
                return this.Invoice_ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.Invoice_ItemsField, value) != true)) {
                    this.Invoice_ItemsField = value;
                    this.RaisePropertyChanged("Invoice_Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadalotServiceReference.IReadalotService")]
    public interface IReadalotService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/UserExists", ReplyAction="http://tempuri.org/IReadalotService/UserExistsResponse")]
        string UserExists(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/UserExists", ReplyAction="http://tempuri.org/IReadalotService/UserExistsResponse")]
        System.Threading.Tasks.Task<string> UserExistsAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/PasswordMatcher", ReplyAction="http://tempuri.org/IReadalotService/PasswordMatcherResponse")]
        bool PasswordMatcher(string OPass, string CPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/PasswordMatcher", ReplyAction="http://tempuri.org/IReadalotService/PasswordMatcherResponse")]
        System.Threading.Tasks.Task<bool> PasswordMatcherAsync(string OPass, string CPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/Register", ReplyAction="http://tempuri.org/IReadalotService/RegisterResponse")]
        void Register(string title, string fName, string lName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/Register", ReplyAction="http://tempuri.org/IReadalotService/RegisterResponse")]
        System.Threading.Tasks.Task RegisterAsync(string title, string fName, string lName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getUserInfoByEmail", ReplyAction="http://tempuri.org/IReadalotService/getUserInfoByEmailResponse")]
        Readalot_Latest.ReadalotServiceReference.User getUserInfoByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getUserInfoByEmail", ReplyAction="http://tempuri.org/IReadalotService/getUserInfoByEmailResponse")]
        System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.User> getUserInfoByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/registerAdmin", ReplyAction="http://tempuri.org/IReadalotService/registerAdminResponse")]
        void registerAdmin(string title, string fName, string lName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/registerAdmin", ReplyAction="http://tempuri.org/IReadalotService/registerAdminResponse")]
        System.Threading.Tasks.Task registerAdminAsync(string title, string fName, string lName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/deleteUserByEmail", ReplyAction="http://tempuri.org/IReadalotService/deleteUserByEmailResponse")]
        bool deleteUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/deleteUserByEmail", ReplyAction="http://tempuri.org/IReadalotService/deleteUserByEmailResponse")]
        System.Threading.Tasks.Task<bool> deleteUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getAllUsers", ReplyAction="http://tempuri.org/IReadalotService/getAllUsersResponse")]
        Readalot_Latest.ReadalotServiceReference.User[] getAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getAllUsers", ReplyAction="http://tempuri.org/IReadalotService/getAllUsersResponse")]
        System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.User[]> getAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/addNewProduct", ReplyAction="http://tempuri.org/IReadalotService/addNewProductResponse")]
        void addNewProduct(string isbn, string title, string authors, string subject, string description, int price, int quantity, string imgsrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/addNewProduct", ReplyAction="http://tempuri.org/IReadalotService/addNewProductResponse")]
        System.Threading.Tasks.Task addNewProductAsync(string isbn, string title, string authors, string subject, string description, int price, int quantity, string imgsrc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/deleteProductByISBN", ReplyAction="http://tempuri.org/IReadalotService/deleteProductByISBNResponse")]
        bool deleteProductByISBN(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/deleteProductByISBN", ReplyAction="http://tempuri.org/IReadalotService/deleteProductByISBNResponse")]
        System.Threading.Tasks.Task<bool> deleteProductByISBNAsync(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/deleteProductByTitle", ReplyAction="http://tempuri.org/IReadalotService/deleteProductByTitleResponse")]
        bool deleteProductByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/deleteProductByTitle", ReplyAction="http://tempuri.org/IReadalotService/deleteProductByTitleResponse")]
        System.Threading.Tasks.Task<bool> deleteProductByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByISBN", ReplyAction="http://tempuri.org/IReadalotService/getProductByISBNResponse")]
        Readalot_Latest.ReadalotServiceReference.TextBook getProductByISBN(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByISBN", ReplyAction="http://tempuri.org/IReadalotService/getProductByISBNResponse")]
        System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook> getProductByISBNAsync(string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByTitle", ReplyAction="http://tempuri.org/IReadalotService/getProductByTitleResponse")]
        Readalot_Latest.ReadalotServiceReference.TextBook[] getProductByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByTitle", ReplyAction="http://tempuri.org/IReadalotService/getProductByTitleResponse")]
        System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getProductByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByAuthor", ReplyAction="http://tempuri.org/IReadalotService/getProductByAuthorResponse")]
        Readalot_Latest.ReadalotServiceReference.TextBook[] getProductByAuthor(string author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByAuthor", ReplyAction="http://tempuri.org/IReadalotService/getProductByAuthorResponse")]
        System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getProductByAuthorAsync(string author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getAllProducts", ReplyAction="http://tempuri.org/IReadalotService/getAllProductsResponse")]
        Readalot_Latest.ReadalotServiceReference.TextBook[] getAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getAllProducts", ReplyAction="http://tempuri.org/IReadalotService/getAllProductsResponse")]
        System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByCat", ReplyAction="http://tempuri.org/IReadalotService/getProductByCatResponse")]
        Readalot_Latest.ReadalotServiceReference.TextBook[] getProductByCat(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByCat", ReplyAction="http://tempuri.org/IReadalotService/getProductByCatResponse")]
        System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getProductByCatAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getBook", ReplyAction="http://tempuri.org/IReadalotService/getBookResponse")]
        Readalot_Latest.ReadalotServiceReference.TextBook getBook(string ISBN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getBook", ReplyAction="http://tempuri.org/IReadalotService/getBookResponse")]
        System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook> getBookAsync(string ISBN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByfilter", ReplyAction="http://tempuri.org/IReadalotService/getProductByfilterResponse")]
        Readalot_Latest.ReadalotServiceReference.TextBook[] getProductByfilter(string type, int filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadalotService/getProductByfilter", ReplyAction="http://tempuri.org/IReadalotService/getProductByfilterResponse")]
        System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getProductByfilterAsync(string type, int filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReadalotServiceChannel : Readalot_Latest.ReadalotServiceReference.IReadalotService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadalotServiceClient : System.ServiceModel.ClientBase<Readalot_Latest.ReadalotServiceReference.IReadalotService>, Readalot_Latest.ReadalotServiceReference.IReadalotService {
        
        public ReadalotServiceClient() {
        }
        
        public ReadalotServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReadalotServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReadalotServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReadalotServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string UserExists(string email, string password) {
            return base.Channel.UserExists(email, password);
        }
        
        public System.Threading.Tasks.Task<string> UserExistsAsync(string email, string password) {
            return base.Channel.UserExistsAsync(email, password);
        }
        
        public bool PasswordMatcher(string OPass, string CPass) {
            return base.Channel.PasswordMatcher(OPass, CPass);
        }
        
        public System.Threading.Tasks.Task<bool> PasswordMatcherAsync(string OPass, string CPass) {
            return base.Channel.PasswordMatcherAsync(OPass, CPass);
        }
        
        public void Register(string title, string fName, string lName, string email, string password) {
            base.Channel.Register(title, fName, lName, email, password);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(string title, string fName, string lName, string email, string password) {
            return base.Channel.RegisterAsync(title, fName, lName, email, password);
        }
        
        public Readalot_Latest.ReadalotServiceReference.User getUserInfoByEmail(string email) {
            return base.Channel.getUserInfoByEmail(email);
        }
        
        public System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.User> getUserInfoByEmailAsync(string email) {
            return base.Channel.getUserInfoByEmailAsync(email);
        }
        
        public void registerAdmin(string title, string fName, string lName, string email, string password) {
            base.Channel.registerAdmin(title, fName, lName, email, password);
        }
        
        public System.Threading.Tasks.Task registerAdminAsync(string title, string fName, string lName, string email, string password) {
            return base.Channel.registerAdminAsync(title, fName, lName, email, password);
        }
        
        public bool deleteUserByEmail(string email) {
            return base.Channel.deleteUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<bool> deleteUserByEmailAsync(string email) {
            return base.Channel.deleteUserByEmailAsync(email);
        }
        
        public Readalot_Latest.ReadalotServiceReference.User[] getAllUsers() {
            return base.Channel.getAllUsers();
        }
        
        public System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.User[]> getAllUsersAsync() {
            return base.Channel.getAllUsersAsync();
        }
        
        public void addNewProduct(string isbn, string title, string authors, string subject, string description, int price, int quantity, string imgsrc) {
            base.Channel.addNewProduct(isbn, title, authors, subject, description, price, quantity, imgsrc);
        }
        
        public System.Threading.Tasks.Task addNewProductAsync(string isbn, string title, string authors, string subject, string description, int price, int quantity, string imgsrc) {
            return base.Channel.addNewProductAsync(isbn, title, authors, subject, description, price, quantity, imgsrc);
        }
        
        public bool deleteProductByISBN(string isbn) {
            return base.Channel.deleteProductByISBN(isbn);
        }
        
        public System.Threading.Tasks.Task<bool> deleteProductByISBNAsync(string isbn) {
            return base.Channel.deleteProductByISBNAsync(isbn);
        }
        
        public bool deleteProductByTitle(string title) {
            return base.Channel.deleteProductByTitle(title);
        }
        
        public System.Threading.Tasks.Task<bool> deleteProductByTitleAsync(string title) {
            return base.Channel.deleteProductByTitleAsync(title);
        }
        
        public Readalot_Latest.ReadalotServiceReference.TextBook getProductByISBN(string isbn) {
            return base.Channel.getProductByISBN(isbn);
        }
        
        public System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook> getProductByISBNAsync(string isbn) {
            return base.Channel.getProductByISBNAsync(isbn);
        }
        
        public Readalot_Latest.ReadalotServiceReference.TextBook[] getProductByTitle(string title) {
            return base.Channel.getProductByTitle(title);
        }
        
        public System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getProductByTitleAsync(string title) {
            return base.Channel.getProductByTitleAsync(title);
        }
        
        public Readalot_Latest.ReadalotServiceReference.TextBook[] getProductByAuthor(string author) {
            return base.Channel.getProductByAuthor(author);
        }
        
        public System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getProductByAuthorAsync(string author) {
            return base.Channel.getProductByAuthorAsync(author);
        }
        
        public Readalot_Latest.ReadalotServiceReference.TextBook[] getAllProducts() {
            return base.Channel.getAllProducts();
        }
        
        public System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getAllProductsAsync() {
            return base.Channel.getAllProductsAsync();
        }
        
        public Readalot_Latest.ReadalotServiceReference.TextBook[] getProductByCat(string type) {
            return base.Channel.getProductByCat(type);
        }
        
        public System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getProductByCatAsync(string type) {
            return base.Channel.getProductByCatAsync(type);
        }
        
        public Readalot_Latest.ReadalotServiceReference.TextBook getBook(string ISBN) {
            return base.Channel.getBook(ISBN);
        }
        
        public System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook> getBookAsync(string ISBN) {
            return base.Channel.getBookAsync(ISBN);
        }
        
        public Readalot_Latest.ReadalotServiceReference.TextBook[] getProductByfilter(string type, int filter) {
            return base.Channel.getProductByfilter(type, filter);
        }
        
        public System.Threading.Tasks.Task<Readalot_Latest.ReadalotServiceReference.TextBook[]> getProductByfilterAsync(string type, int filter) {
            return base.Channel.getProductByfilterAsync(type, filter);
        }
    }
}
